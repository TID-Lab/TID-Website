{"version":3,"sources":["webpack://t-id-georgia-tech/./node_modules/semantic-ui-react/dist/es/collections/Grid/GridColumn.js","webpack://t-id-georgia-tech/./node_modules/semantic-ui-react/dist/es/collections/Grid/GridRow.js","webpack://t-id-georgia-tech/./node_modules/semantic-ui-react/dist/es/collections/Grid/Grid.js","webpack://t-id-georgia-tech/./src/pages/index.js"],"names":["GridColumn","props","children","className","computer","color","floated","largeScreen","mobile","only","stretched","tablet","textAlign","verticalAlign","widescreen","width","classes","rest","getUnhandledProps","ElementType","getElementType","handledProps","create","GridRow","centered","columns","divided","reversed","Grid","celled","container","doubling","inverted","padded","relaxed","stackable","Column","Row","pageStyles","fontFamily","fontSize","headerStyles","textContainerStyles","backgroundColor","projectContainerStyles","padding","innerContainerStyles","projectDataJSX","projectsData","project","push","src","image","href","link","size","rounded","name","shortDescription","style","fluid"],"mappings":"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","file":"component---src-pages-index-js-e5aea8d2c985613ee2eb.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport React from 'react';\nimport { customPropTypes, createShorthandFactory, getElementType, getUnhandledProps, SUI, useKeyOnly, useMultipleProp, useTextAlignProp, useValueAndKey, useVerticalAlignProp, useWidthProp } from '../../lib';\n/**\n * A column sub-component for Grid.\n */\n\nfunction GridColumn(props) {\n  var children = props.children,\n      className = props.className,\n      computer = props.computer,\n      color = props.color,\n      floated = props.floated,\n      largeScreen = props.largeScreen,\n      mobile = props.mobile,\n      only = props.only,\n      stretched = props.stretched,\n      tablet = props.tablet,\n      textAlign = props.textAlign,\n      verticalAlign = props.verticalAlign,\n      widescreen = props.widescreen,\n      width = props.width;\n  var classes = cx(color, useKeyOnly(stretched, 'stretched'), useMultipleProp(only, 'only'), useTextAlignProp(textAlign), useValueAndKey(floated, 'floated'), useVerticalAlignProp(verticalAlign), useWidthProp(computer, 'wide computer'), useWidthProp(largeScreen, 'wide large screen'), useWidthProp(mobile, 'wide mobile'), useWidthProp(tablet, 'wide tablet'), useWidthProp(widescreen, 'wide widescreen'), useWidthProp(width, 'wide'), 'column', className);\n  var rest = getUnhandledProps(GridColumn, props);\n  var ElementType = getElementType(GridColumn, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), children);\n}\n\nGridColumn.handledProps = [\"as\", \"children\", \"className\", \"color\", \"computer\", \"floated\", \"largeScreen\", \"mobile\", \"only\", \"stretched\", \"tablet\", \"textAlign\", \"verticalAlign\", \"widescreen\", \"width\"];\nGridColumn.create = createShorthandFactory(GridColumn, function (children) {\n  return {\n    children: children\n  };\n});\nexport default GridColumn;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport React from 'react';\nimport { customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useMultipleProp, useTextAlignProp, useVerticalAlignProp, useWidthProp } from '../../lib';\n/**\n * A row sub-component for Grid.\n */\n\nfunction GridRow(props) {\n  var centered = props.centered,\n      children = props.children,\n      className = props.className,\n      color = props.color,\n      columns = props.columns,\n      divided = props.divided,\n      only = props.only,\n      reversed = props.reversed,\n      stretched = props.stretched,\n      textAlign = props.textAlign,\n      verticalAlign = props.verticalAlign;\n  var classes = cx(color, useKeyOnly(centered, 'centered'), useKeyOnly(divided, 'divided'), useKeyOnly(stretched, 'stretched'), useMultipleProp(only, 'only'), useMultipleProp(reversed, 'reversed'), useTextAlignProp(textAlign), useVerticalAlignProp(verticalAlign), useWidthProp(columns, 'column', true), 'row', className);\n  var rest = getUnhandledProps(GridRow, props);\n  var ElementType = getElementType(GridRow, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), children);\n}\n\nGridRow.handledProps = [\"as\", \"centered\", \"children\", \"className\", \"color\", \"columns\", \"divided\", \"only\", \"reversed\", \"stretched\", \"textAlign\", \"verticalAlign\"];\nexport default GridRow;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport React from 'react';\nimport { customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useKeyOrValueAndKey, useMultipleProp, useTextAlignProp, useVerticalAlignProp, useWidthProp } from '../../lib';\nimport GridColumn from './GridColumn';\nimport GridRow from './GridRow';\n/**\n * A grid is used to harmonize negative space in a layout.\n */\n\nfunction Grid(props) {\n  var celled = props.celled,\n      centered = props.centered,\n      children = props.children,\n      className = props.className,\n      columns = props.columns,\n      container = props.container,\n      divided = props.divided,\n      doubling = props.doubling,\n      inverted = props.inverted,\n      padded = props.padded,\n      relaxed = props.relaxed,\n      reversed = props.reversed,\n      stackable = props.stackable,\n      stretched = props.stretched,\n      textAlign = props.textAlign,\n      verticalAlign = props.verticalAlign;\n  var classes = cx('ui', useKeyOnly(centered, 'centered'), useKeyOnly(container, 'container'), useKeyOnly(doubling, 'doubling'), useKeyOnly(inverted, 'inverted'), useKeyOnly(stackable, 'stackable'), useKeyOnly(stretched, 'stretched'), useKeyOrValueAndKey(celled, 'celled'), useKeyOrValueAndKey(divided, 'divided'), useKeyOrValueAndKey(padded, 'padded'), useKeyOrValueAndKey(relaxed, 'relaxed'), useMultipleProp(reversed, 'reversed'), useTextAlignProp(textAlign), useVerticalAlignProp(verticalAlign), useWidthProp(columns, 'column', true), 'grid', className);\n  var rest = getUnhandledProps(Grid, props);\n  var ElementType = getElementType(Grid, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), children);\n}\n\nGrid.handledProps = [\"as\", \"celled\", \"centered\", \"children\", \"className\", \"columns\", \"container\", \"divided\", \"doubling\", \"inverted\", \"padded\", \"relaxed\", \"reversed\", \"stackable\", \"stretched\", \"textAlign\", \"verticalAlign\"];\nGrid.Column = GridColumn;\nGrid.Row = GridRow;\nexport default Grid;","import * as React from \"react\";\nimport {Container, Divider, Grid, Header, Image} from \"semantic-ui-react\";\nimport NavBar from '../components/NavBar';\nimport FooterBar from \"../components/FooterBar\";\nimport projectsData from '../data/projects.json';\n\n\n// styles\nconst pageStyles = {\n  color: \"#232129\",\n  fontFamily: \"HelveticaNeue-Light\",\n  fontSize: \"13pt\"\n}\n\nconst headerStyles = {\n  fontFamily: \"HelveticaNeue-Light\",\n}\nconst textContainerStyles = {\n  backgroundColor: \"#e9e9e9\"\n}\n\nconst projectContainerStyles = {\n  backgroundColor: \"#FFFFFF\",\n  padding: \"4em 0\"\n}\n\nconst innerContainerStyles = {\n  padding: \"4em 0\"\n}\n\n// Create JSX elements for each project.\nconst projectDataJSX = []\nprojectsData.currentProjects.forEach((project)=>{\n  projectDataJSX.push(\n      <Grid.Column>\n        <Container>\n          <Image src={project.image} href={project.link} size='small' floated='left' rounded/>\n          <h3>{project.name}</h3>\n          <p>{project.shortDescription} <a href={project.link}>See more...</a></p>\n        </Container>\n      </Grid.Column>\n  )\n})\n\n// markup\nconst IndexPage = () => {\n  return (\n      <>\n        <NavBar></NavBar>\n        <main style={pageStyles}>\n          <title>Projects Page</title>\n          <Container fluid style={textContainerStyles}>\n            <Container style={innerContainerStyles} textAlign='left'>\n              <Header size='huge' style={headerStyles}>About the Lab</Header>\n              <Divider/>\n              <Image src={\"./static/images/aggie_retreat_1.jpeg\"} size='large' floated='right' rounded/>\n              <p>\n                The Technologies and International Development Lab at Georgia Tech researches the practice, the\n                promise, and the peril of information and communication technologies (ICTs) in social, economic, and\n                political development. We study the risks and rewards of ICT systems for people and communities\n                particularly within Africa and Asia. We explore issues of rights and justice in a digital age. And\n                we examine new forms for inclusive innovation and social entrepreneurship enhanced through digital\n                systems.\n              </p>\n              <p>\n                The T+ID Lab is an interdisciplinary community bringing together computer and social scientists with\n                design and policy specialists. We collaborate directly with stakeholders outside of the Lab to\n                critique technologies, invent new ones, and research how and why (or why not) ICTs can serve as a\n                tool to empower, enrich, and interconnect.\n              </p>\n              <p>\n                <b>Future Lab members:</b> We are always looking to add new members to our team. Georgia Tech students\n                (undergraduate to graduate) should contact us if they have a passion to truly impact the world and\n                embrace working in inter-disciplinary teams.\n              </p>\n              <p>\n                The T+ID Lab is directed by <a href={\"http://ic.gatech.edu/\"}>Dr. Michael L. Best</a>, Professor,{' '}\n                <a href={\"http://inta.gatech.edu/\"}>The Sam Nunn School of International Affairs</a> and {' '}\n                <a href={\"http://ic.gatech.edu/\"}>School of Interactive Computing</a>, Georgia Institute of Technology.\n              </p>\n            </Container>\n          </Container>\n          <Container fluid style={projectContainerStyles}>\n            <Container textAlign='left'>\n              <Header size='huge' style={headerStyles}>Projects</Header>\n              <Divider/>\n              <Grid columns={2}>\n                {projectDataJSX}\n              </Grid>\n            </Container>\n          </Container>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n        </main>\n        <FooterBar></FooterBar>\n      </>\n  )\n}\n\nexport default IndexPage\n"],"sourceRoot":""}