{"version":3,"sources":["webpack://t-id-georgia-tech/./node_modules/semantic-ui-react/dist/es/collections/Grid/GridColumn.js","webpack://t-id-georgia-tech/./node_modules/semantic-ui-react/dist/es/collections/Grid/GridRow.js","webpack://t-id-georgia-tech/./node_modules/semantic-ui-react/dist/es/collections/Grid/Grid.js","webpack://t-id-georgia-tech/./src/pages/projects/hci4d.js"],"names":["GridColumn","props","children","className","computer","color","floated","largeScreen","mobile","only","stretched","tablet","textAlign","verticalAlign","widescreen","width","classes","rest","getUnhandledProps","ElementType","getElementType","handledProps","create","GridRow","centered","columns","divided","reversed","Grid","celled","container","doubling","inverted","padded","relaxed","stackable","Column","Row","pageStyles","fontFamily","fontSize","headerStyles","innerContainerStyles","padding","style","fluid","size","src","rounded","href"],"mappings":"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","file":"component---src-pages-projects-hci-4-d-js-8d33bca404698f4dc847.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport React from 'react';\nimport { customPropTypes, createShorthandFactory, getElementType, getUnhandledProps, SUI, useKeyOnly, useMultipleProp, useTextAlignProp, useValueAndKey, useVerticalAlignProp, useWidthProp } from '../../lib';\n/**\n * A column sub-component for Grid.\n */\n\nfunction GridColumn(props) {\n  var children = props.children,\n      className = props.className,\n      computer = props.computer,\n      color = props.color,\n      floated = props.floated,\n      largeScreen = props.largeScreen,\n      mobile = props.mobile,\n      only = props.only,\n      stretched = props.stretched,\n      tablet = props.tablet,\n      textAlign = props.textAlign,\n      verticalAlign = props.verticalAlign,\n      widescreen = props.widescreen,\n      width = props.width;\n  var classes = cx(color, useKeyOnly(stretched, 'stretched'), useMultipleProp(only, 'only'), useTextAlignProp(textAlign), useValueAndKey(floated, 'floated'), useVerticalAlignProp(verticalAlign), useWidthProp(computer, 'wide computer'), useWidthProp(largeScreen, 'wide large screen'), useWidthProp(mobile, 'wide mobile'), useWidthProp(tablet, 'wide tablet'), useWidthProp(widescreen, 'wide widescreen'), useWidthProp(width, 'wide'), 'column', className);\n  var rest = getUnhandledProps(GridColumn, props);\n  var ElementType = getElementType(GridColumn, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), children);\n}\n\nGridColumn.handledProps = [\"as\", \"children\", \"className\", \"color\", \"computer\", \"floated\", \"largeScreen\", \"mobile\", \"only\", \"stretched\", \"tablet\", \"textAlign\", \"verticalAlign\", \"widescreen\", \"width\"];\nGridColumn.create = createShorthandFactory(GridColumn, function (children) {\n  return {\n    children: children\n  };\n});\nexport default GridColumn;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport React from 'react';\nimport { customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useMultipleProp, useTextAlignProp, useVerticalAlignProp, useWidthProp } from '../../lib';\n/**\n * A row sub-component for Grid.\n */\n\nfunction GridRow(props) {\n  var centered = props.centered,\n      children = props.children,\n      className = props.className,\n      color = props.color,\n      columns = props.columns,\n      divided = props.divided,\n      only = props.only,\n      reversed = props.reversed,\n      stretched = props.stretched,\n      textAlign = props.textAlign,\n      verticalAlign = props.verticalAlign;\n  var classes = cx(color, useKeyOnly(centered, 'centered'), useKeyOnly(divided, 'divided'), useKeyOnly(stretched, 'stretched'), useMultipleProp(only, 'only'), useMultipleProp(reversed, 'reversed'), useTextAlignProp(textAlign), useVerticalAlignProp(verticalAlign), useWidthProp(columns, 'column', true), 'row', className);\n  var rest = getUnhandledProps(GridRow, props);\n  var ElementType = getElementType(GridRow, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), children);\n}\n\nGridRow.handledProps = [\"as\", \"centered\", \"children\", \"className\", \"color\", \"columns\", \"divided\", \"only\", \"reversed\", \"stretched\", \"textAlign\", \"verticalAlign\"];\nexport default GridRow;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport React from 'react';\nimport { customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useKeyOrValueAndKey, useMultipleProp, useTextAlignProp, useVerticalAlignProp, useWidthProp } from '../../lib';\nimport GridColumn from './GridColumn';\nimport GridRow from './GridRow';\n/**\n * A grid is used to harmonize negative space in a layout.\n */\n\nfunction Grid(props) {\n  var celled = props.celled,\n      centered = props.centered,\n      children = props.children,\n      className = props.className,\n      columns = props.columns,\n      container = props.container,\n      divided = props.divided,\n      doubling = props.doubling,\n      inverted = props.inverted,\n      padded = props.padded,\n      relaxed = props.relaxed,\n      reversed = props.reversed,\n      stackable = props.stackable,\n      stretched = props.stretched,\n      textAlign = props.textAlign,\n      verticalAlign = props.verticalAlign;\n  var classes = cx('ui', useKeyOnly(centered, 'centered'), useKeyOnly(container, 'container'), useKeyOnly(doubling, 'doubling'), useKeyOnly(inverted, 'inverted'), useKeyOnly(stackable, 'stackable'), useKeyOnly(stretched, 'stretched'), useKeyOrValueAndKey(celled, 'celled'), useKeyOrValueAndKey(divided, 'divided'), useKeyOrValueAndKey(padded, 'padded'), useKeyOrValueAndKey(relaxed, 'relaxed'), useMultipleProp(reversed, 'reversed'), useTextAlignProp(textAlign), useVerticalAlignProp(verticalAlign), useWidthProp(columns, 'column', true), 'grid', className);\n  var rest = getUnhandledProps(Grid, props);\n  var ElementType = getElementType(Grid, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), children);\n}\n\nGrid.handledProps = [\"as\", \"celled\", \"centered\", \"children\", \"className\", \"columns\", \"container\", \"divided\", \"doubling\", \"inverted\", \"padded\", \"relaxed\", \"reversed\", \"stackable\", \"stretched\", \"textAlign\", \"verticalAlign\"];\nGrid.Column = GridColumn;\nGrid.Row = GridRow;\nexport default Grid;","/*\nThis is the human computer interaction for development page. This page is hardcoded and does not rely on a json file.\nIf you would like to create changes, do so in this file. ML2021\n */\nimport * as React from \"react\";\nimport { Container, Divider, Header, Image, Grid } from 'semantic-ui-react';\nimport NavBar from '../../components/NavBar';\nimport FooterBar from \"../../components/FooterBar\";\n\n// styles\nconst pageStyles = {\n  color: \"#232129\",\n  fontFamily: \"HelveticaNeue-Light\",\n  fontSize: \"13pt\"\n}\nconst headerStyles = {\n  fontFamily: \"HelveticaNeue-Light\",\n}\nconst innerContainerStyles = {\n  padding: \"4em 0\"\n}\n\n/**\n * People data is formatted with the fields: name (their name), roleOrEducation (their education\n * or/and role in the lab), photoSrc (url for image), description (little blurb about\n * themseleves), personalLink (link to their own website of choice). In addition, peopleData\n * has two fields representing sections itself, peopleData.faculty (faculty) and\n * peopleData.students (students).\n */\n// markup\nconst HCI4DPage = () => {\n  return (\n      <>\n        <NavBar></NavBar>\n        <main style={pageStyles}>\n          <title>Contact Us</title>\n          <Container fluid>\n            <Container style={innerContainerStyles} textAlign='left'>\n              <Grid>\n                <Grid.Row>\n                  <Grid.Column>\n                    <Header size='huge' style={headerStyles}>HCI For Development (HCI4D)</Header>\n                    <Divider/>\n                    <Image src={\"/static/images/hci4d.png\"} size='medium' floated='left' rounded/>\n                    <p>\n                      Exploring systems to empower people and address their needs, desires, and aspirations. How (or\n                      why) do we design the \"personal\" out of \"personal computers,\" the desk out of the desktop, and\n                      English from the QWERTY keyboard? Instead, should we create a community computer based on\n                      agricultural or family metaphors, for instance? What is a user or community centered design method\n                      for low-income countries?\n                    </p>\n                  </Grid.Column>\n                </Grid.Row>\n                <Grid.Row>\n                  <Grid.Column>\n                    <Header size='medium' style={headerStyles}>HCI China</Header>\n                    <Divider/>\n                    <Image src={\"/static/images/chinese.key.jpg\"}\n                           size='medium' floated='right' rounded/>\n                    <p>\n                      The HCI China project is comprised of a literature review that analyzes the trends and general\n                      characteristics of human-computer interaction research originating from China, regarding China, or\n                      both. Our study examines both English-language and Chinese-language papers and uncovers a few key\n                      differences across these two sets of papers. We see that the English-language literature is more\n                      human-focused, while the Chinese-language literature has a greater focus on specific technologies.\n                      Looking at trends over time, the topics in the English-language literature showed some significant\n                      changes throughout the collection's time period. In contrast, the topics in the Chinese-language\n                      literature were more static. These characteristics and trends might be echoing those found in the\n                      English-language HCI community and the HCI community in China.\n                    </p>\n                    <p><b>Status:</b> Open to Join</p>\n                    <p>Image:\n                      <a href=\"https://www.flickr.com/photos/basykes/5713453794\">\n                        https://www.flickr.com/photos/basykes/5713453794\n                      </a>\n                    </p>\n                  </Grid.Column>\n                </Grid.Row>\n              </Grid>\n            </Container>\n          </Container>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n        </main>\n        <FooterBar></FooterBar>\n      </>\n  )\n}\n\nexport default HCI4DPage\n"],"sourceRoot":""}