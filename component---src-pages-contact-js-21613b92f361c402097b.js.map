{"version":3,"sources":["webpack://t-id-georgia-tech/./node_modules/semantic-ui-react/dist/es/elements/Segment/SegmentGroup.js","webpack://t-id-georgia-tech/./node_modules/semantic-ui-react/dist/es/elements/Segment/SegmentInline.js","webpack://t-id-georgia-tech/./node_modules/semantic-ui-react/dist/es/elements/Segment/Segment.js","webpack://t-id-georgia-tech/./src/pages/contact.js"],"names":["SegmentGroup","props","children","className","compact","content","horizontal","piled","raised","size","stacked","classes","rest","getUnhandledProps","ElementType","getElementType","childrenUtils","handledProps","SegmentInline","Segment","attached","basic","circular","clearing","color","disabled","floated","inverted","loading","placeholder","padded","secondary","tertiary","textAlign","vertical","Group","Inline","pageStyles","fontFamily","fontSize","headerStyles","contactInfoStyles","lineHeight","innerContainerStyles","padding","mapSegmentStyles","overflow","paddingBottom","position","height","mapIframeStyles","left","top","width","border","NavBar","style","Container","fluid","Header","Divider","href","src","frameBorder","allowFullScreen","aria-hidden","title","FooterBar"],"mappings":"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","file":"component---src-pages-contact-js-21613b92f361c402097b.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _without from \"lodash-es/without\";\nimport cx from 'clsx';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly } from '../../lib';\n/**\n * A group of segments can be formatted to appear together.\n */\n\nfunction SegmentGroup(props) {\n  var children = props.children,\n      className = props.className,\n      compact = props.compact,\n      content = props.content,\n      horizontal = props.horizontal,\n      piled = props.piled,\n      raised = props.raised,\n      size = props.size,\n      stacked = props.stacked;\n  var classes = cx('ui', size, useKeyOnly(compact, 'compact'), useKeyOnly(horizontal, 'horizontal'), useKeyOnly(piled, 'piled'), useKeyOnly(raised, 'raised'), useKeyOnly(stacked, 'stacked'), 'segments', className);\n  var rest = getUnhandledProps(SegmentGroup, props);\n  var ElementType = getElementType(SegmentGroup, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nSegmentGroup.handledProps = [\"as\", \"children\", \"className\", \"compact\", \"content\", \"horizontal\", \"piled\", \"raised\", \"size\", \"stacked\"];\nexport default SegmentGroup;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\n/**\n * A placeholder segment can be inline.\n */\n\nfunction SegmentInline(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content;\n  var classes = cx('inline', className);\n  var rest = getUnhandledProps(SegmentInline, props);\n  var ElementType = getElementType(SegmentInline, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nSegmentInline.handledProps = [\"as\", \"children\", \"className\", \"content\"];\nexport default SegmentInline;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _without from \"lodash-es/without\";\nimport cx from 'clsx';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useKeyOrValueAndKey, useTextAlignProp, useValueAndKey } from '../../lib';\nimport SegmentGroup from './SegmentGroup';\nimport SegmentInline from './SegmentInline';\n/**\n * A segment is used to create a grouping of related content.\n */\n\nfunction Segment(props) {\n  var attached = props.attached,\n      basic = props.basic,\n      children = props.children,\n      circular = props.circular,\n      className = props.className,\n      clearing = props.clearing,\n      color = props.color,\n      compact = props.compact,\n      content = props.content,\n      disabled = props.disabled,\n      floated = props.floated,\n      inverted = props.inverted,\n      loading = props.loading,\n      placeholder = props.placeholder,\n      padded = props.padded,\n      piled = props.piled,\n      raised = props.raised,\n      secondary = props.secondary,\n      size = props.size,\n      stacked = props.stacked,\n      tertiary = props.tertiary,\n      textAlign = props.textAlign,\n      vertical = props.vertical;\n  var classes = cx('ui', color, size, useKeyOnly(basic, 'basic'), useKeyOnly(circular, 'circular'), useKeyOnly(clearing, 'clearing'), useKeyOnly(compact, 'compact'), useKeyOnly(disabled, 'disabled'), useKeyOnly(inverted, 'inverted'), useKeyOnly(loading, 'loading'), useKeyOnly(placeholder, 'placeholder'), useKeyOnly(piled, 'piled'), useKeyOnly(raised, 'raised'), useKeyOnly(secondary, 'secondary'), useKeyOnly(stacked, 'stacked'), useKeyOnly(tertiary, 'tertiary'), useKeyOnly(vertical, 'vertical'), useKeyOrValueAndKey(attached, 'attached'), useKeyOrValueAndKey(padded, 'padded'), useTextAlignProp(textAlign), useValueAndKey(floated, 'floated'), 'segment', className);\n  var rest = getUnhandledProps(Segment, props);\n  var ElementType = getElementType(Segment, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nSegment.handledProps = [\"as\", \"attached\", \"basic\", \"children\", \"circular\", \"className\", \"clearing\", \"color\", \"compact\", \"content\", \"disabled\", \"floated\", \"inverted\", \"loading\", \"padded\", \"piled\", \"placeholder\", \"raised\", \"secondary\", \"size\", \"stacked\", \"tertiary\", \"textAlign\", \"vertical\"];\nSegment.Group = SegmentGroup;\nSegment.Inline = SegmentInline;\nexport default Segment;","/*\nThis is the contact page on the website. This page is hardcoded and does not take any data from json files so if you\nwould like to edit this page, do so in this file.\n */\n\nimport * as React from \"react\";\nimport { Container, Divider, Header, Segment } from 'semantic-ui-react';\nimport NavBar from '../components/NavBar';\nimport FooterBar from \"../components/FooterBar\";\n\n// styles\nconst pageStyles = {\n  color: \"#232129\",\n  fontFamily: \"HelveticaNeue-Light\",\n  fontSize: \"13pt\"\n};\n\nconst headerStyles = {\n  fontFamily: \"HelveticaNeue-Light\",\n};\n\nconst contactInfoStyles = {\n  lineHeight: \"normal\"\n};\n\nconst innerContainerStyles = {\n  padding: \"4em 0\"\n};\n\nconst mapSegmentStyles = {\n  overflow: \"hidden\",\n  paddingBottom: \"56.25%\",\n  position: \"relative\",\n  height:0\n};\n\nconst mapIframeStyles = {\n  left:0,\n  top:0,\n  height:\"100%\",\n  width:\"100%\",\n  position:\"absolute\",\n  border: 0\n}\n\n/**\n * The Data on this page is hardcoded and does not recieve data from any json files. Simply edit this file to edit the\n * contents of the contact page. In addition, a Google Maps Iframe is taken from the previous website.\n */\nconst ContactPage = () => {\n  return (\n      <>\n        <NavBar></NavBar>\n        <main style={pageStyles}>\n          <title>Contact Us</title>\n          <Container fluid>\n            <Container style={innerContainerStyles} textAlign='left'>\n              <Header size='huge' style={headerStyles}>Contact Us</Header>\n              <Divider/>\n              <div style={contactInfoStyles}>\n                <p>\n                  <b>Lab Director:</b> Michael L. Best<br/>\n                  <b>Email:</b> <a href=\"mailto:mikeb@gatech.edu\">mikeb@gatech.edu</a><br/>\n                  <b>Phone:</b> <a href=\"tel:+1404-894-0298\">+1 404-894-0298</a><br/>\n                </p>\n                <p>\n                  <b>Address:</b><br/>\n                  Technology Square Research Building (TSRB)<br/>\n                  Room 329<br/>\n                  85 Fifth Street NW<br/>\n                  Atlanta, GA 30308<br/>\n                  USA <br/>\n                  {/* Also hardcoded */}\n                  <a href=\"https://goo.gl/maps/XVykAnkYys4RLzrq8\">Google Maps</a>\n                </p>\n                <Segment style={mapSegmentStyles}>\n                  {/* Hardcoded from previous website*/}\n                  <iframe\n                      src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3316.355246039734!2d-84.39220728519385!3d33.77732333961583!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x88f50466db4dc359%3A0x3e130665d2d8138b!2sTechnology%20Square%20Research%20Building%2C%2085%205th%20St%20NW%2C%20Atlanta%2C%20GA%2030308!5e0!3m2!1sen!2sus!4v1587582467388!5m2!1sen!2sus\"\n                      height=\"450\" frameBorder=\"0\" style={mapIframeStyles} allowFullScreen=\"\" aria-hidden=\"false\"\n                      title=\"TSRB Location on Google Maps\">\n                  </iframe>\n                </Segment>\n              </div>\n              <Header style={headerStyles}>Directions to TSRB via Public Transit (MARTA)</Header>\n              <p>\n                Ride the MARTA North-South Rail Line (the orange line) to the Midtown station and exit the station to\n                the south onto Peachtree Place NE. There, you will find a stop for the Tech Trolley.\n                This is a free bus service to campus. Ride the Trolley to the stop just past Spring Street, which is in\n                front of a Moe’s restaurant. There is a pathway to the right of the restaurant which passes some other\n                shops. Follow that path through the courtyard and the entrance to TSRB will be on your left.\n              </p>\n              <Header style={headerStyles}>Gaining access to TSRB when you are in Tech Square</Header>\n              <p>\n                TSRB is the leftmost building as you face the Centergy plaza from 5th street. It has a Moe’s Mexican\n                restaurant in its ground floor. The entrance to TSRB is up the slight steps that run between the Moe’s\n                and the courtyard area. The entrance are double doors on your left. TSRB is a secure building with a\n                security desk at the entrance. If you don’t have a BuzzCard, you will need to sign in with security.\n                If you encounter any problems, please contact whoever you are meeting to have them escort you in. Or\n                have the security desk call Michael Best (on extension 4-0298).\n              </p>\n              <Header style={headerStyles}>Directions to Room 329</Header>\n              <p>\n                Take the TSRB elevator to the third floor. Upon exiting the elevator, turn right, then right again and\n                proceed a few meters down the hall. The office of Dr. Michael L. Best is now directly to your left and\n                the lab area is to the left and right of the office.\n              </p>\n            </Container>\n          </Container>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n        </main>\n        <FooterBar></FooterBar>\n      </>\n  )\n}\n\nexport default ContactPage\n"],"sourceRoot":""}