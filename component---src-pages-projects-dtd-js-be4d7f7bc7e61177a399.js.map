{"version":3,"sources":["webpack://t-id-georgia-tech/./node_modules/semantic-ui-react/dist/es/collections/Grid/GridColumn.js","webpack://t-id-georgia-tech/./node_modules/semantic-ui-react/dist/es/collections/Grid/GridRow.js","webpack://t-id-georgia-tech/./node_modules/semantic-ui-react/dist/es/collections/Grid/Grid.js","webpack://t-id-georgia-tech/./src/pages/projects/dtd.js"],"names":["GridColumn","props","children","className","computer","color","floated","largeScreen","mobile","only","stretched","tablet","textAlign","verticalAlign","widescreen","width","classes","rest","getUnhandledProps","ElementType","getElementType","handledProps","create","GridRow","centered","columns","divided","reversed","Grid","celled","container","doubling","inverted","padded","relaxed","stackable","Column","Row","pageStyles","fontFamily","fontSize","headerStyles","innerContainerStyles","padding","style","fluid","size","src","rounded","href","id"],"mappings":"qOAQA,SAASA,EAAWC,GAClB,IAAIC,EAAWD,EAAMC,SACjBC,EAAYF,EAAME,UAClBC,EAAWH,EAAMG,SACjBC,EAAQJ,EAAMI,MACdC,EAAUL,EAAMK,QAChBC,EAAcN,EAAMM,YACpBC,EAASP,EAAMO,OACfC,EAAOR,EAAMQ,KACbC,EAAYT,EAAMS,UAClBC,EAASV,EAAMU,OACfC,EAAYX,EAAMW,UAClBC,EAAgBZ,EAAMY,cACtBC,EAAab,EAAMa,WACnBC,EAAQd,EAAMc,MACdC,GAAU,OAAGX,GAAO,QAAWK,EAAW,cAAc,QAAgBD,EAAM,SAAS,QAAiBG,IAAY,QAAeN,EAAS,YAAY,QAAqBO,IAAgB,QAAaT,EAAU,kBAAkB,QAAaG,EAAa,sBAAsB,QAAaC,EAAQ,gBAAgB,QAAaG,EAAQ,gBAAgB,QAAaG,EAAY,oBAAoB,QAAaC,EAAO,QAAS,SAAUZ,GACpbc,GAAO,EAAAC,EAAA,GAAkBlB,EAAYC,GACrCkB,GAAc,EAAAC,EAAA,GAAepB,EAAYC,GAC7C,OAAoB,gBAAoBkB,GAAa,OAAS,GAAIF,EAAM,CACtEd,UAAWa,IACTd,GAGNF,EAAWqB,aAAe,CAAC,KAAM,WAAY,YAAa,QAAS,WAAY,UAAW,cAAe,SAAU,OAAQ,YAAa,SAAU,YAAa,gBAAiB,aAAc,SAC9LrB,EAAWsB,QAAS,QAAuBtB,GAAY,SAAUE,GAC/D,MAAO,CACLA,SAAUA,MAGd,QC7BA,SAASqB,EAAQtB,GACf,IAAIuB,EAAWvB,EAAMuB,SACjBtB,EAAWD,EAAMC,SACjBC,EAAYF,EAAME,UAClBE,EAAQJ,EAAMI,MACdoB,EAAUxB,EAAMwB,QAChBC,EAAUzB,EAAMyB,QAChBjB,EAAOR,EAAMQ,KACbkB,EAAW1B,EAAM0B,SACjBjB,EAAYT,EAAMS,UAClBE,EAAYX,EAAMW,UAClBC,EAAgBZ,EAAMY,cACtBG,GAAU,OAAGX,GAAO,QAAWmB,EAAU,aAAa,QAAWE,EAAS,YAAY,QAAWhB,EAAW,cAAc,QAAgBD,EAAM,SAAS,QAAgBkB,EAAU,aAAa,QAAiBf,IAAY,QAAqBC,IAAgB,QAAaY,EAAS,UAAU,GAAO,MAAOtB,GAChTc,GAAO,EAAAC,EAAA,GAAkBK,EAAStB,GAClCkB,GAAc,EAAAC,EAAA,GAAeG,EAAStB,GAC1C,OAAoB,gBAAoBkB,GAAa,OAAS,GAAIF,EAAM,CACtEd,UAAWa,IACTd,GAGNqB,EAAQF,aAAe,CAAC,KAAM,WAAY,WAAY,YAAa,QAAS,UAAW,UAAW,OAAQ,WAAY,YAAa,YAAa,iBAChJ,QCnBA,SAASO,EAAK3B,GACZ,IAAI4B,EAAS5B,EAAM4B,OACfL,EAAWvB,EAAMuB,SACjBtB,EAAWD,EAAMC,SACjBC,EAAYF,EAAME,UAClBsB,EAAUxB,EAAMwB,QAChBK,EAAY7B,EAAM6B,UAClBJ,EAAUzB,EAAMyB,QAChBK,EAAW9B,EAAM8B,SACjBC,EAAW/B,EAAM+B,SACjBC,EAAShC,EAAMgC,OACfC,EAAUjC,EAAMiC,QAChBP,EAAW1B,EAAM0B,SACjBQ,EAAYlC,EAAMkC,UAClBzB,EAAYT,EAAMS,UAClBE,EAAYX,EAAMW,UAClBC,EAAgBZ,EAAMY,cACtBG,GAAU,OAAG,MAAM,QAAWQ,EAAU,aAAa,QAAWM,EAAW,cAAc,QAAWC,EAAU,aAAa,QAAWC,EAAU,aAAa,QAAWG,EAAW,cAAc,QAAWzB,EAAW,cAAc,QAAoBmB,EAAQ,WAAW,QAAoBH,EAAS,YAAY,QAAoBO,EAAQ,WAAW,QAAoBC,EAAS,YAAY,QAAgBP,EAAU,aAAa,QAAiBf,IAAY,QAAqBC,IAAgB,QAAaY,EAAS,UAAU,GAAO,OAAQtB,GAC7hBc,GAAO,EAAAC,EAAA,GAAkBU,EAAM3B,GAC/BkB,GAAc,EAAAC,EAAA,GAAeQ,EAAM3B,GACvC,OAAoB,gBAAoBkB,GAAa,OAAS,GAAIF,EAAM,CACtEd,UAAWa,IACTd,GAGN0B,EAAKP,aAAe,CAAC,KAAM,SAAU,WAAY,WAAY,YAAa,UAAW,YAAa,UAAW,WAAY,WAAY,SAAU,UAAW,WAAY,YAAa,YAAa,YAAa,iBAC7MO,EAAKQ,OAAS,EACdR,EAAKS,IAAM,EACX,S,6HC3BMC,EAAa,CACjBjC,MAAO,UACPkC,WAAY,sBACZC,SAAU,QAENC,EAAe,CACnBF,WAAY,uBAERG,EAAuB,CAC3BC,QAAS,SA8FX,UA1FgB,WACd,OACI,gCACE,gBAAC,IAAD,MACA,wBAAMC,MAAON,GACX,2CACA,gBAAC,IAAD,CAAWO,OAAK,GACd,gBAAC,IAAD,CAAWD,MAAOF,EAAsB9B,UAAU,QAChD,gBAAC,IAAD,KACE,gBAAC,QAAD,KACE,gBAAC,WAAD,KACE,gBAAC,IAAD,CAAQkC,KAAK,OAAOF,MAAOH,GAA3B,gCACA,gBAAC,IAAD,MACA,gBAAC,IAAD,CAAOM,IAAK,0BAA2BD,KAAK,QAAQxC,QAAQ,QAAQ0C,SAAO,IAC3E,gZAMA,8ZAMA,yFAEE,qBAAGC,KAAK,uCAAR,UAFF,+VAUJ,gBAAC,QAAD,KACE,gBAAC,WAAD,KACE,gBAAC,IAAD,CAAQH,KAAK,SAASI,GAAG,UAAUN,MAAOH,GAA1C,2DAGA,gBAAC,IAAD,MACA,gBAAC,IAAD,CAAOM,IAAK,yDACLD,KAAK,SAASxC,QAAQ,QAAQ0C,SAAO,IAC5C,26BAWA,m7BAWA,8PAKA,uCACA,qBAAGC,KAAK,8FAAR,mGAQV,2BACA,2BACA,2BACA,4BAEF,gBAAC,IAAD","file":"component---src-pages-projects-dtd-js-be4d7f7bc7e61177a399.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport React from 'react';\nimport { customPropTypes, createShorthandFactory, getElementType, getUnhandledProps, SUI, useKeyOnly, useMultipleProp, useTextAlignProp, useValueAndKey, useVerticalAlignProp, useWidthProp } from '../../lib';\n/**\n * A column sub-component for Grid.\n */\n\nfunction GridColumn(props) {\n  var children = props.children,\n      className = props.className,\n      computer = props.computer,\n      color = props.color,\n      floated = props.floated,\n      largeScreen = props.largeScreen,\n      mobile = props.mobile,\n      only = props.only,\n      stretched = props.stretched,\n      tablet = props.tablet,\n      textAlign = props.textAlign,\n      verticalAlign = props.verticalAlign,\n      widescreen = props.widescreen,\n      width = props.width;\n  var classes = cx(color, useKeyOnly(stretched, 'stretched'), useMultipleProp(only, 'only'), useTextAlignProp(textAlign), useValueAndKey(floated, 'floated'), useVerticalAlignProp(verticalAlign), useWidthProp(computer, 'wide computer'), useWidthProp(largeScreen, 'wide large screen'), useWidthProp(mobile, 'wide mobile'), useWidthProp(tablet, 'wide tablet'), useWidthProp(widescreen, 'wide widescreen'), useWidthProp(width, 'wide'), 'column', className);\n  var rest = getUnhandledProps(GridColumn, props);\n  var ElementType = getElementType(GridColumn, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), children);\n}\n\nGridColumn.handledProps = [\"as\", \"children\", \"className\", \"color\", \"computer\", \"floated\", \"largeScreen\", \"mobile\", \"only\", \"stretched\", \"tablet\", \"textAlign\", \"verticalAlign\", \"widescreen\", \"width\"];\nGridColumn.create = createShorthandFactory(GridColumn, function (children) {\n  return {\n    children: children\n  };\n});\nexport default GridColumn;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport React from 'react';\nimport { customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useMultipleProp, useTextAlignProp, useVerticalAlignProp, useWidthProp } from '../../lib';\n/**\n * A row sub-component for Grid.\n */\n\nfunction GridRow(props) {\n  var centered = props.centered,\n      children = props.children,\n      className = props.className,\n      color = props.color,\n      columns = props.columns,\n      divided = props.divided,\n      only = props.only,\n      reversed = props.reversed,\n      stretched = props.stretched,\n      textAlign = props.textAlign,\n      verticalAlign = props.verticalAlign;\n  var classes = cx(color, useKeyOnly(centered, 'centered'), useKeyOnly(divided, 'divided'), useKeyOnly(stretched, 'stretched'), useMultipleProp(only, 'only'), useMultipleProp(reversed, 'reversed'), useTextAlignProp(textAlign), useVerticalAlignProp(verticalAlign), useWidthProp(columns, 'column', true), 'row', className);\n  var rest = getUnhandledProps(GridRow, props);\n  var ElementType = getElementType(GridRow, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), children);\n}\n\nGridRow.handledProps = [\"as\", \"centered\", \"children\", \"className\", \"color\", \"columns\", \"divided\", \"only\", \"reversed\", \"stretched\", \"textAlign\", \"verticalAlign\"];\nexport default GridRow;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport React from 'react';\nimport { customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useKeyOrValueAndKey, useMultipleProp, useTextAlignProp, useVerticalAlignProp, useWidthProp } from '../../lib';\nimport GridColumn from './GridColumn';\nimport GridRow from './GridRow';\n/**\n * A grid is used to harmonize negative space in a layout.\n */\n\nfunction Grid(props) {\n  var celled = props.celled,\n      centered = props.centered,\n      children = props.children,\n      className = props.className,\n      columns = props.columns,\n      container = props.container,\n      divided = props.divided,\n      doubling = props.doubling,\n      inverted = props.inverted,\n      padded = props.padded,\n      relaxed = props.relaxed,\n      reversed = props.reversed,\n      stackable = props.stackable,\n      stretched = props.stretched,\n      textAlign = props.textAlign,\n      verticalAlign = props.verticalAlign;\n  var classes = cx('ui', useKeyOnly(centered, 'centered'), useKeyOnly(container, 'container'), useKeyOnly(doubling, 'doubling'), useKeyOnly(inverted, 'inverted'), useKeyOnly(stackable, 'stackable'), useKeyOnly(stretched, 'stretched'), useKeyOrValueAndKey(celled, 'celled'), useKeyOrValueAndKey(divided, 'divided'), useKeyOrValueAndKey(padded, 'padded'), useKeyOrValueAndKey(relaxed, 'relaxed'), useMultipleProp(reversed, 'reversed'), useTextAlignProp(textAlign), useVerticalAlignProp(verticalAlign), useWidthProp(columns, 'column', true), 'grid', className);\n  var rest = getUnhandledProps(Grid, props);\n  var ElementType = getElementType(Grid, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), children);\n}\n\nGrid.handledProps = [\"as\", \"celled\", \"centered\", \"children\", \"className\", \"columns\", \"container\", \"divided\", \"doubling\", \"inverted\", \"padded\", \"relaxed\", \"reversed\", \"stackable\", \"stretched\", \"textAlign\", \"verticalAlign\"];\nGrid.Column = GridColumn;\nGrid.Row = GridRow;\nexport default Grid;","/*\nThis page is the Digital Threats to Democracy project page. This page is hardcoded and does not reflect the data on any\njson file. If you would like to make edits to this page, do so in this file. ML 2021\n */\n\nimport * as React from \"react\";\nimport { Container, Divider, Header, Image, Grid } from 'semantic-ui-react'\nimport NavBar from '../../components/NavBar';\nimport FooterBar from \"../../components/FooterBar\";\n\n// Styles\nconst pageStyles = {\n  color: \"#232129\",\n  fontFamily: \"HelveticaNeue-Light\",\n  fontSize: \"13pt\"\n}\nconst headerStyles = {\n  fontFamily: \"HelveticaNeue-Light\",\n}\nconst innerContainerStyles = {\n  padding: \"4em 0\"\n}\n\n// Markup\nconst DtDPage = () => {\n  return (\n      <>\n        <NavBar></NavBar>\n        <main style={pageStyles}>\n          <title>Contact Us</title>\n          <Container fluid>\n            <Container style={innerContainerStyles} textAlign='left'>\n              <Grid>\n                <Grid.Row>\n                  <Grid.Column>\n                    <Header size='huge' style={headerStyles}>Digital Threats to Democracy</Header>\n                    <Divider/>\n                    <Image src={\"/static/images/dt2d.png\"} size='large' floated='right' rounded/>\n                    <p>\n                      Enhancing civic engagement, strengthening democracy, and monitoring elections. What role does social\n                      media play in elections? How can we identify and respond to hate speech and disinformation designed to\n                      undermine democratic practice? Can we build systems that enhance transparency and good governance? How\n                      can ICTs help promote an innovative and effective civil society?\n                    </p>\n                    <p>\n                      We are inventing new software platforms and real-world processes to help identify, track, and respond\n                      to digital threats to democratic development. In particular, we focus on hate speech and\n                      disinformation during election periods in emerging democracies. Our tools include new augmented AI\n                      systems to assist human trackers as they monitor multiple social media feeds in semi real-time.\n                    </p>\n                    <p>\n                      Digital Threats to Democracy (DtD) programs often make use of\n                      <a href=\"https://tid-lab.github.io/getaggie/\"> Aggie</a>, an open-source cross-media\n                      tracking platform. Aggie has been used primarily for real-time online content tracking and response to\n                      critical events during national elections. The T+ID team has collaborated on the deployment of the Aggie\n                      platform during elections in Nigeria, Ghana, Kenya, Liberia, Iraq, Venezuela, and other countries\n                      worldwide.\n                    </p>\n                  </Grid.Column>\n                </Grid.Row>\n                <Grid.Row>\n                  <Grid.Column>\n                    <Header size='medium' id=\"myanmar\" style={headerStyles}>\n                      Hate Speech and Disinformation in Myanmar 2020 Election\n                    </Header>\n                    <Divider/>\n                    <Image src={\"/static/images/Myanmar_election_2015_ballot_paper.jpeg\"}\n                           size='medium' floated='right' rounded/>\n                    <p>\n                      Myanmar has experienced a recent explosion in mobile internet access. Enabled by this rise in network\n                      access has been a wave of disinformation, hate speech, attacks on free speech and human rights groups,\n                      and physical violence. The UN’s independent international fact-finding mission on Myanmar has identified\n                      the significant negative role that hate speech and disinformation has played, especially when\n                      communicated across social media. This has been most clearly evident in the use of social media to\n                      convey hate speech and coordinate attacks against linguistic and religious minority groups – accumulated\n                      actions which the United Nations labeled as genocide. This extreme social stress in Myanmar, the\n                      particularly fraught position of minority populations, and the specific and meaningful range of clearly\n                      identified digital threats underpin the relevance of this particular case study and field deployment.\n                    </p>\n                    <p>\n                      Software text tools for the Myanmar majority Burmese language are immature and we are integrating and\n                      innovating on text analysis and natural language processing tools for Burmese. We are alo developing new\n                      machine learning modules to assist trackers specifically in identification and monitoring of hate speech\n                      and disinformation. These NLP and ML engines help to focus trackers’ attention on suspect posts,\n                      ensuring a more manageable process and enabling semi real-time response. The project is also developing\n                      new systems to assist in analysis and traffic categorization for non-real-time reporting. These modules,\n                      for instance, can be used to provide daily or weekly reports of aggregate hate speech activity in the\n                      time period around a national election. Such reports could help inform the work of national election\n                      commissions, social media platform providers, and the international electoral observer community.\n                    </p>\n                    <p>\n                      While this initial NLP work will be targeted towards communication in Burmese, many of our findings\n                      should be generalizable and extendable to other languages and contexts, especially other low-resource\n                      languages like Burmese.\n                    </p>\n                    <span>Image: </span>\n                    <a href=\"https://upload.wikimedia.org/wikipedia/commons/e/e5/Myanmar_election_2015_ballot_paper.jpg\">\n                      https://upload.wikimedia.org/wikipedia/commons/e/e5/Myanmar_election_2015_ballot_paper.jpg\n                    </a>\n                  </Grid.Column>\n                </Grid.Row>\n              </Grid>\n            </Container>\n          </Container>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n        </main>\n        <FooterBar></FooterBar>\n      </>\n  )\n}\n\nexport default DtDPage\n"],"sourceRoot":""}