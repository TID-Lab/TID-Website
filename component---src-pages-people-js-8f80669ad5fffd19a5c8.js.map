{"version":3,"sources":["webpack://t-id-georgia-tech/./node_modules/semantic-ui-react/dist/es/collections/Grid/GridColumn.js","webpack://t-id-georgia-tech/./node_modules/semantic-ui-react/dist/es/collections/Grid/GridRow.js","webpack://t-id-georgia-tech/./node_modules/semantic-ui-react/dist/es/collections/Grid/Grid.js","webpack://t-id-georgia-tech/./node_modules/semantic-ui-react/dist/es/elements/Reveal/RevealContent.js","webpack://t-id-georgia-tech/./node_modules/semantic-ui-react/dist/es/elements/Reveal/Reveal.js","webpack://t-id-georgia-tech/./src/pages/people.js"],"names":["GridColumn","props","children","className","computer","color","floated","largeScreen","mobile","only","stretched","tablet","textAlign","verticalAlign","widescreen","width","classes","rest","getUnhandledProps","ElementType","getElementType","handledProps","create","GridRow","centered","columns","divided","reversed","Grid","celled","container","doubling","inverted","padded","relaxed","stackable","Column","Row","RevealContent","content","hidden","visible","childrenUtils","Reveal","active","animated","disabled","instant","Content","pageStyles","fontFamily","fontSize","headerStyles","innerContainerStyles","padding","NavBar","style","Container","fluid","Header","size","Divider","peopleData","faculty","key","name","Image","src","photoSrc","rounded","description","href","personalLink","roleOrEducation","student","FooterBar"],"mappings":"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","file":"component---src-pages-people-js-8f80669ad5fffd19a5c8.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport React from 'react';\nimport { customPropTypes, createShorthandFactory, getElementType, getUnhandledProps, SUI, useKeyOnly, useMultipleProp, useTextAlignProp, useValueAndKey, useVerticalAlignProp, useWidthProp } from '../../lib';\n/**\n * A column sub-component for Grid.\n */\n\nfunction GridColumn(props) {\n  var children = props.children,\n      className = props.className,\n      computer = props.computer,\n      color = props.color,\n      floated = props.floated,\n      largeScreen = props.largeScreen,\n      mobile = props.mobile,\n      only = props.only,\n      stretched = props.stretched,\n      tablet = props.tablet,\n      textAlign = props.textAlign,\n      verticalAlign = props.verticalAlign,\n      widescreen = props.widescreen,\n      width = props.width;\n  var classes = cx(color, useKeyOnly(stretched, 'stretched'), useMultipleProp(only, 'only'), useTextAlignProp(textAlign), useValueAndKey(floated, 'floated'), useVerticalAlignProp(verticalAlign), useWidthProp(computer, 'wide computer'), useWidthProp(largeScreen, 'wide large screen'), useWidthProp(mobile, 'wide mobile'), useWidthProp(tablet, 'wide tablet'), useWidthProp(widescreen, 'wide widescreen'), useWidthProp(width, 'wide'), 'column', className);\n  var rest = getUnhandledProps(GridColumn, props);\n  var ElementType = getElementType(GridColumn, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), children);\n}\n\nGridColumn.handledProps = [\"as\", \"children\", \"className\", \"color\", \"computer\", \"floated\", \"largeScreen\", \"mobile\", \"only\", \"stretched\", \"tablet\", \"textAlign\", \"verticalAlign\", \"widescreen\", \"width\"];\nGridColumn.create = createShorthandFactory(GridColumn, function (children) {\n  return {\n    children: children\n  };\n});\nexport default GridColumn;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport React from 'react';\nimport { customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useMultipleProp, useTextAlignProp, useVerticalAlignProp, useWidthProp } from '../../lib';\n/**\n * A row sub-component for Grid.\n */\n\nfunction GridRow(props) {\n  var centered = props.centered,\n      children = props.children,\n      className = props.className,\n      color = props.color,\n      columns = props.columns,\n      divided = props.divided,\n      only = props.only,\n      reversed = props.reversed,\n      stretched = props.stretched,\n      textAlign = props.textAlign,\n      verticalAlign = props.verticalAlign;\n  var classes = cx(color, useKeyOnly(centered, 'centered'), useKeyOnly(divided, 'divided'), useKeyOnly(stretched, 'stretched'), useMultipleProp(only, 'only'), useMultipleProp(reversed, 'reversed'), useTextAlignProp(textAlign), useVerticalAlignProp(verticalAlign), useWidthProp(columns, 'column', true), 'row', className);\n  var rest = getUnhandledProps(GridRow, props);\n  var ElementType = getElementType(GridRow, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), children);\n}\n\nGridRow.handledProps = [\"as\", \"centered\", \"children\", \"className\", \"color\", \"columns\", \"divided\", \"only\", \"reversed\", \"stretched\", \"textAlign\", \"verticalAlign\"];\nexport default GridRow;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport React from 'react';\nimport { customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useKeyOrValueAndKey, useMultipleProp, useTextAlignProp, useVerticalAlignProp, useWidthProp } from '../../lib';\nimport GridColumn from './GridColumn';\nimport GridRow from './GridRow';\n/**\n * A grid is used to harmonize negative space in a layout.\n */\n\nfunction Grid(props) {\n  var celled = props.celled,\n      centered = props.centered,\n      children = props.children,\n      className = props.className,\n      columns = props.columns,\n      container = props.container,\n      divided = props.divided,\n      doubling = props.doubling,\n      inverted = props.inverted,\n      padded = props.padded,\n      relaxed = props.relaxed,\n      reversed = props.reversed,\n      stackable = props.stackable,\n      stretched = props.stretched,\n      textAlign = props.textAlign,\n      verticalAlign = props.verticalAlign;\n  var classes = cx('ui', useKeyOnly(centered, 'centered'), useKeyOnly(container, 'container'), useKeyOnly(doubling, 'doubling'), useKeyOnly(inverted, 'inverted'), useKeyOnly(stackable, 'stackable'), useKeyOnly(stretched, 'stretched'), useKeyOrValueAndKey(celled, 'celled'), useKeyOrValueAndKey(divided, 'divided'), useKeyOrValueAndKey(padded, 'padded'), useKeyOrValueAndKey(relaxed, 'relaxed'), useMultipleProp(reversed, 'reversed'), useTextAlignProp(textAlign), useVerticalAlignProp(verticalAlign), useWidthProp(columns, 'column', true), 'grid', className);\n  var rest = getUnhandledProps(Grid, props);\n  var ElementType = getElementType(Grid, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), children);\n}\n\nGrid.handledProps = [\"as\", \"celled\", \"centered\", \"children\", \"className\", \"columns\", \"container\", \"divided\", \"doubling\", \"inverted\", \"padded\", \"relaxed\", \"reversed\", \"stackable\", \"stretched\", \"textAlign\", \"verticalAlign\"];\nGrid.Column = GridColumn;\nGrid.Row = GridRow;\nexport default Grid;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, useKeyOnly } from '../../lib';\n/**\n * A content sub-component for the Reveal.\n */\n\nfunction RevealContent(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      hidden = props.hidden,\n      visible = props.visible;\n  var classes = cx('ui', useKeyOnly(hidden, 'hidden'), useKeyOnly(visible, 'visible'), 'content', className);\n  var rest = getUnhandledProps(RevealContent, props);\n  var ElementType = getElementType(RevealContent, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nRevealContent.handledProps = [\"as\", \"children\", \"className\", \"content\", \"hidden\", \"visible\"];\nexport default RevealContent;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, useKeyOnly } from '../../lib';\nimport RevealContent from './RevealContent';\n/**\n * A reveal displays additional content in place of previous content when activated.\n */\n\nfunction Reveal(props) {\n  var active = props.active,\n      animated = props.animated,\n      children = props.children,\n      className = props.className,\n      content = props.content,\n      disabled = props.disabled,\n      instant = props.instant;\n  var classes = cx('ui', animated, useKeyOnly(active, 'active'), useKeyOnly(disabled, 'disabled'), useKeyOnly(instant, 'instant'), 'reveal', className);\n  var rest = getUnhandledProps(Reveal, props);\n  var ElementType = getElementType(Reveal, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nReveal.handledProps = [\"active\", \"animated\", \"as\", \"children\", \"className\", \"content\", \"disabled\", \"instant\"];\nReveal.Content = RevealContent;\nexport default Reveal;","/*\nThis is the people page of the website, if you want to quickly change this page, adjust the ../data/people.json file\nto reflect the new members or edits to the older members. In addition, you will need to upload a SQUARE photo to the\npublic/static/images/ folder so that their image is reflected.\n */\n\nimport * as React from \"react\";\nimport { Container, Divider, Reveal, Grid, Header, Image } from 'semantic-ui-react'\nimport NavBar from '../components/NavBar';\nimport FooterBar from \"../components/FooterBar\";\nimport peopleData from \"../data/people.json\";\n\n// Styles\nconst pageStyles = {\n  color: \"#232129\",\n  fontFamily: \"HelveticaNeue-Light\",\n  fontSize: \"13pt\"\n};\n\nconst headerStyles = {\n  fontFamily: \"HelveticaNeue-Light\",\n};\n\nconst innerContainerStyles = {\n  padding: \"4em 0\"\n};\n\n/**\n * People data is formatted with the fields: name (their name), roleOrEducation (their education\n * or/and role in the lab), photoSrc (url for image), description (little blurb about\n * themseleves), personalLink (link to their own website of choice). In addition, peopleData\n * has two fields representing sections itself, peopleData.faculty (faculty) and\n * peopleData.students (students).\n */\n// markup\nconst PeoplePage = () => {\n  return (\n      <>\n        <NavBar></NavBar>\n        <main style={pageStyles}>\n          <title>People Page</title>\n          <Container fluid>\n            <Container style={innerContainerStyles} textAlign='left'>\n              <Header size='huge' style={headerStyles}>Faculty</Header>\n              <Divider/>\n              <Grid columns={2}>\n                <Grid.Row>\n                  {peopleData.faculty.map((faculty) => {\n                    return (\n                        <Grid.Column key={faculty.name} mobile={16} tablet={8} computer={4}>\n                          <Reveal animated='move down'>\n                            <Reveal.Content visible>\n                              <Image src={faculty.photoSrc} size='medium' rounded/>\n                            </Reveal.Content>\n                            <Reveal.Content hidden>\n                              {/* 300px is the width of medium image */}\n                              <Container style={{width: \"300px\"}}>\n                                <p>{faculty.description}</p>\n                              </Container>\n                            </Reveal.Content>\n                          </Reveal>\n                          <Header style={headerStyles}><a href={faculty.personalLink}>{faculty.name}</a></Header>\n                          <p>{faculty.roleOrEducation}</p>\n                        </Grid.Column>\n                    );\n                  })}\n                </Grid.Row>\n              </Grid>\n              <br/>\n              <br/>\n              <br/>\n              <br/>\n              <Header size='huge' style={headerStyles}>Current Students</Header>\n              <Divider/>\n              <Grid columns={2}>\n                {peopleData.students.map((student) => {\n                  return (\n                      <Grid.Column mobile={16} tablet={8} computer={4} key={student.name}>\n                        <Reveal animated='move down'>\n                          <Reveal.Content visible>\n                            <Image src={student.photoSrc} size='medium' rounded/>\n                          </Reveal.Content>\n                          <Reveal.Content hidden>\n                            {/* 300px is the width of medium image */}\n                            <Container style={{width: \"300px\"}}>\n                              <p>{student.description}</p>\n                            </Container>\n                          </Reveal.Content>\n                        </Reveal>\n                        <Header style={headerStyles}><a href={student.personalLink}>{student.name}</a></Header>\n                        <p>{student.roleOrEducation}</p>\n                      </Grid.Column>\n                  );\n                })}\n              </Grid>\n            </Container>\n          </Container>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n        </main>\n        <FooterBar></FooterBar>\n      </>\n  )\n}\n\nexport default PeoplePage\n"],"sourceRoot":""}